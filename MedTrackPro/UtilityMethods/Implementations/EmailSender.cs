using MedTrackPro.UtilityMethods.Interfaces;
using System.Net;
using System.Net.Mail;
using Microsoft.Extensions.Options;
using MedTrackPro.UtilityMethods.UtilModels;
namespace MedTrackPro.UtilityMethods.Implementations;



public class EmailSender : IEmailSender
{
    private readonly SmtpSettings _smtpSettings;

    public EmailSender(IOptions<SmtpSettings> smtpSettings)
    {
        _smtpSettings = smtpSettings.Value;
    }

    public async Task SendEmailAsync(string email, string subject, string htmlMessage)
    {
        // Ensure TLS 1.2 is enabled
        System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12;

        // Read SMTP configuration from appsettings.json
        var smtpSettings = new
        {
            Server = "smtp.gmail.com",
            Port = 587,
            SenderEmail = "mu4991472@gmail.com",
            Username = "mu4991472@gmail.com",
            Password = "xddnjhptivpgcwse", // Use an app password generated by Gmail
            EnableSsl = true
        };

        // SMTP Client setup
        using (MailMessage mail = new MailMessage())
        {
            mail.From = new MailAddress(smtpSettings.SenderEmail, "Muhammad Ubaid MedTrackPro");
            mail.To.Add(email);
            mail.Subject = subject;
            mail.Body = htmlMessage;
            mail.IsBodyHtml = true;

            using (SmtpClient smtp = new SmtpClient(smtpSettings.Server, smtpSettings.Port))
            {
                smtp.Credentials = new NetworkCredential(smtpSettings.Username, smtpSettings.Password);
                smtp.EnableSsl = smtpSettings.EnableSsl;

                try
                {
                    await smtp.SendMailAsync(mail);
                    Console.WriteLine("Email sent successfully.");
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Error sending email: {ex.Message}");
                    throw;
                }
            }
        }
    }

}
